

#include <RH_RF95.h>

RH_RH95 *RH_RF95::_deviceInterrupt[]={0,0,0};

PROGMEM static const RH_RF95::ModemConfig MODEM_CONFIG_TABLE[] =
{
    //  1d,     1e,      26
    { 0x72,   0x74,    0x00}, // Bw125Cr45Sf128 (the chip default)
    { 0x92,   0x74,    0x00}, // Bw500Cr45Sf128
    { 0x48,   0x94,    0x00}, // Bw31_25Cr48Sf512
    { 0x78,   0xc4,    0x00}, // Bw125Cr48Sf4096
    
};

RH_RF95::RH_RF95(uint8_t slavaSelectPin, uint8_t interruptPin)//doubtfull about this
{
	_interruptPin=interruptPin;
	_myInterruptIndex=0xff;//not assigned

}


virtual bool RH_RF95::init()
{
	if(!RHspi::init())
		return false;
	
	int interruptNumber= digitalPintoInterrupt(_interruptPin);
	if(interruptNumber!=NOT_AN_INTERRUPT)
		return false;
		
	#ifdef RH_ATTACHINTERRUPT_TAKES_PIN_NUMBER
    	interruptNumber = _interruptPin;
	#endif

	spiWrite(RH_RF95_REG_01_OP_MODE, RH_RF95_MODE_SLEEP | RH_RF95_LONG_RANGE_MODE);
        delay(10);//Wait for sleep mode to take over from say, CAD
    // Check we are in sleep mode, with LORA set
    
    	 if (spiRead(RH_RF95_REG_01_OP_MODE) != (RH_RF95_MODE_SLEEP | RH_RF95_LONG_RANGE_MODE))
    	 {
    	 	return false;
    	 }
    	 
    	 
	
